{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isndarrayLike from '@stdlib/assert-is-ndarray-like';\nimport isFunction from '@stdlib/assert-is-function';\nimport base from '@stdlib/ndarray-base-for-each';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Invokes a callback function once for each ndarray element.\n*\n* @param {ndarray} x - input ndarray\n* @param {Callback} fcn - callback function\n* @param {*} [thisArg] - callback execution context\n* @throws {TypeError} first argument must be an ndarray-like object\n* @throws {TypeError} callback argument must be a function\n* @returns {void}\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n* import ndarray from '@stdlib/ndarray-ctor';\n* import naryFunction from '@stdlib/utils-nary-function';\n* import log from '@stdlib/console-log';\n*\n* var buffer = new Float64Array( [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0 ] );\n* var shape = [ 2, 3 ];\n* var strides = [ 6, 1 ];\n* var offset = 1;\n*\n* var x = ndarray( 'float64', buffer, shape, strides, offset, 'row-major' );\n* // returns <ndarray>\n*\n* // Apply the callback function:\n* forEach( x, naryFunction( log, 1 ) );\n*/\nfunction forEach( x, fcn, thisArg ) {\n\tif ( !isndarrayLike( x ) ) {\n\t\tthrow new TypeError( format( 'null5t', x ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'null2b', fcn ) );\n\t}\n\tbase( [ x ], fcn, thisArg );\n}\n\n\n// EXPORTS //\n\nexport default forEach;\n"],"names":["forEach","x","fcn","thisArg","isndarrayLike","TypeError","format","isFunction","base"],"mappings":";;+XAyDA,SAASA,EAASC,EAAGC,EAAKC,GACzB,IAAMC,EAAeH,GACpB,MAAM,IAAII,UAAWC,EAAQ,SAAUL,IAExC,IAAMM,EAAYL,GACjB,MAAM,IAAIG,UAAWC,EAAQ,SAAUJ,IAExCM,EAAM,CAAEP,GAAKC,EAAKC,EACnB"}